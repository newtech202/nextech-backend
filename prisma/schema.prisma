generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Artigo {
  id              Int         @id @default(autoincrement())
  nome            String
  preco           Float
  categoria       String
  impostoAplicado Float
  tipo            ArtigoTipo
  descricao       String
  imagemUrl       String?
  empresaId       Int
  empresa         Empresa     @relation(fields: [empresaId], references: [id], map: "Artigo_empresaId_fkey")
  documento       Documento[]

  @@index([empresaId], map: "Artigo_empresaId_fkey")
}

model Cliente {
  id          Int         @id @default(autoincrement())
  nome        String
  telefone    String
  email       String
  endereco    String
  empresaId   Int
  dataActualizacao DateTime?      @updatedAt
  dataCriacao DateTime    @default(now())
  empresa     Empresa     @relation(fields: [empresaId], references: [id], map: "Cliente_empresaId_fkey")
  documento   Documento[]

  @@index([empresaId], map: "Cliente_empresaId_fkey")
}

model DespesaMotivo {
  id      Int       @id @default(autoincrement())
  motivo  String    @unique
  dataActualizacao DateTime?      @updatedAt
  dataCriacao DateTime    @default(now())
  Despesa Despesa[] @relation(map: "Despesa_motivoId_fkey")
}

model Despesa {
  id               Int           @id @default(autoincrement())
  comprovativo     String?
  nome             String
  valor            Float
  fornecedorId     Int
  retencaoFonte    Boolean
  motivoId         Int
  criadoPorId      Int
  empresaId        Int
  dataActualizacao DateTime?      @updatedAt
  dataCriacao      DateTime      @default(now())
  empresa    Empresa    @relation(fields: [empresaId], references: [id], map: "Despesa_empresaId_fkey")
  fornecedor Fornecedor @relation(fields: [fornecedorId], references: [id], map: "Despesa_fornecedorId_fkey")
  motivo DespesaMotivo @relation(fields: [motivoId], references: [id], map: "Despesa_motivoId_fkey")
  @@index([empresaId], map: "Despesa_empresaId_fkey")
  @@index([fornecedorId], map: "Despesa_fornecedorId_fkey")
  @@index([motivoId], map: "Despesa_motivoId_fkey")
}

model Documento {
  id                 Int      @id @default(autoincrement())
  clienteId          Int
  empresaId          Int
  dataEmissao        DateTime @default(now())
  produtoServicoId   Int
  precoUnitario      Float
  quantidade         Int
  totalLiquido       Float
  totalImpostos      Float
  impostosRetidos    Float
  total              Float
  descontoPercentual Float
  dataActualizacao DateTime?      @updatedAt
  dataCriacao        DateTime @default(now())
  criadoPor          String
  cliente            Cliente  @relation(fields: [clienteId], references: [id], map: "Documento_clienteId_fkey")
  empresa            Empresa  @relation(fields: [empresaId], references: [id], map: "Documento_empresaId_fkey")
  artigo             Artigo   @relation(fields: [produtoServicoId], references: [id], map: "Documento_produtoServicoId_fkey")

  @@index([clienteId], map: "Documento_clienteId_fkey")
  @@index([empresaId], map: "Documento_empresaId_fkey")
  @@index([produtoServicoId], map: "Documento_produtoServicoId_fkey")
}

model Empresa {
  id                  Int                   @id @default(autoincrement())
  nome                String
  dataActualizacao DateTime?      @updatedAt
  dataCriacao         DateTime              @default(now())
  email               String
  logoURL             String?
  nif                 String                @unique(map: "Empresa_nif_key")
  telefone            String
  artigo              Artigo[]
  cliente             Cliente[]
  despesa             Despesa[]
  documento           Documento[]
  planoId             Int
  plano               Plano                 @relation(fields: [planoId], references: [id], map: "Empresa_planoId_fkey")
  fornecedor          Fornecedor[]
  pagamentoSubscricao PagamentoSubscricao[]
  usuario             Usuario[]
  endereco            String
  Categoria           Categoria[]           @relation(map: "Categoria_empresaId_fkey")

  @@index([planoId], map: "Empresa_planoId_fkey")
}

model Fornecedor {
  id          Int       @id @default(autoincrement())
  logo        String?
  nome        String
  nif         String    @unique(map: "Fornecedor_nif_key")
  endereco    String
  telefone    String
  email       String
  empresaId   Int
  dataActualizacao DateTime?      @updatedAt
  dataCriacao DateTime  @default(now())
  despesa     Despesa[]
  empresa     Empresa   @relation(fields: [empresaId], references: [id], map: "Fornecedor_empresaId_fkey")

  @@index([empresaId], map: "Fornecedor_empresaId_fkey")
}

model PagamentoSubscricao {
  id              Int                       @id @default(autoincrement())
  empresaId       Int
  planoId         Int
  dataPagamento   DateTime                  @default(now())
  valor           Float
  statusPagamento PagamentoSubscricaoStatus
  empresa         Empresa                   @relation(fields: [empresaId], references: [id], map: "PagamentoSubscricao_empresaId_fkey")
  plano           Plano                     @relation(fields: [planoId], references: [id], map: "PagamentoSubscricao_planoId_fkey")

  @@index([empresaId], map: "PagamentoSubscricao_empresaId_fkey")
  @@index([planoId], map: "PagamentoSubscricao_planoId_fkey")
}

model Plano {
  id                  Int                   @id @default(autoincrement())
  nome                String
  valor               Float
  periodo             String
  dataActualizacao DateTime?      @updatedAt
  dataCriacao         DateTime              @default(now())
  empresa             Empresa[]
  pagamentoSubscricao PagamentoSubscricao[]
}

model Usuario {
  id                Int       @id @default(autoincrement())
  nome              String
  email             String    @unique(map: "Usuario_email_key")
  senha             String
  empresaId         Int?
  dataActualizacao DateTime?      @updatedAt
  dataCriacao       DateTime  @default(now())
  perfilId          Int
  resetsenhaToken   String?   @unique
  resetsenhaExpires DateTime?
  empresa           Empresa?  @relation(fields: [empresaId], references: [id], map: "Usuario_empresaId_fkey")
  perfil            Perfil    @relation(fields: [perfilId], references: [id], map: "Usuario_perfilId_fkey")

  @@index([perfilId], map: "Usuario_perfilId_fkey")
}

model Perfil {
  id        Int       @id @default(autoincrement())
  nome      String
  descricao String
  usuario   Usuario[]
}

enum ArtigoTipo {
  PRODUTO
  SERVICO
  SERVICO_COM_RETENCAO_6_5
  ARRENDAMENTO
  ARRENDAMENTO_COM_RETENCAO_15
}

enum PagamentoSubscricaoStatus {
  PENDENTE
  CONCLUIDO
  CANCELADO
}

model Categoria {
  id        Int     @id @default(autoincrement())
  nome      String
  descricao String
  empresaId Int
  empresa   Empresa @relation(fields: [empresaId], references: [id], map: "Categoria_empresaId_fkey")

  @@index([empresaId], map: "Categoria_empresaId_fkey")
}
